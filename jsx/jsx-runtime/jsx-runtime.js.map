{"version":3,"file":"jsx-runtime.js","sourceRoot":"","sources":["../src/jsx-runtime.ts"],"names":[],"mappings":"AASA,MAAM,CAAC,MAAM,GAAG,GAAG,CAAkB,GAAW,EAAE,KAAQ,EAAE,GAAY,EAAE,EAAE;IACxE,MAAM,EAAE,QAAQ,EAAE,GAAG,KAAK,CAAC;IAC3B,MAAM,QAAQ,GAAG,EAAE,GAAG,KAAK,EAAE,GAAG,EAAE,CAAC;IACnC,IAAI,aAAa,GAAG,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC;IAC3D,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE;QAC/B,aAAa,GAAG,CAAC,QAAQ,CAAC,CAAC;KAC9B;IACD,aAAa,GAAG,aAAa,CAAC,MAAM,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACtD,MAAM,iBAAiB,GAAmB,EAAE,CAAC;IAC7C,aAAa,CAAC,OAAO,CAAC,CAAC,CAAM,EAAE,EAAE;QAC7B,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YAClB,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;SACjD;aAAM;YACH,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAC7B;IACL,CAAC,CAAC,CAAC;IACF,QAAgB,CAAC,QAAQ,GAAG,iBAAiB,CAAC;IAC/C,OAAO,EAAE,QAAQ,EAAE,iBAAiB,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,EAAgB,CAAC;AAC/E,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,IAAI,GAAG,GAAG,CAAC","sourcesContent":["import { Element } from \"./Element\";\nimport { GameObjectFactory } from \"./gameObjectFactory\";\n\nexport type Props = { key?: string; [key: string]: any };\n\nexport type Tag<P extends Props> = (\n    props: P\n) => Element<P> | GameObjectFactory<P, any, any>;\n\nexport const jsx = <P extends Props>(tag: Tag<P>, props: P, key?: string) => {\n    const { children } = props;\n    const newProps = { ...props, key };\n    let childrenArray = !!props.children ? props.children : [];\n    if (!Array.isArray(childrenArray)) {\n        childrenArray = [children];\n    }\n    childrenArray = childrenArray.filter((c: any) => !!c);\n    const flattenedChildren: Element<any>[] = [];\n    childrenArray.forEach((c: any) => {\n        if (Array.isArray(c)) {\n            c.forEach((cc) => flattenedChildren.push(cc));\n        } else {\n            flattenedChildren.push(c);\n        }\n    });\n    (newProps as any).children = flattenedChildren;\n    return { children: flattenedChildren, props: newProps, tag } as Element<P>;\n};\n\nexport const jsxs = jsx;\n"]}