{"version":3,"file":"utils.js","sourceRoot":"","sources":["../src/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import { Element } from \"./Element\";\nimport { GlobalState } from \"./GlobalState\";\n\nexport const create = <S, T>(\n    scene: S,\n    element: Element<any>,\n    helper: ContainerHelper<T>\n) => {\n    return evaluateTag(scene, element, helper);\n};\n\nconst evaluateTag = <S, P extends object, T>(\n    scene: S,\n    element: Element<any>,\n    helper: ContainerHelper<T>,\n    currentId: string = \"\"\n): T => {\n    const currentState = globalState.current;\n    if (!currentState) {\n        throw new Error(\"global state not set\");\n    }\n    currentId = currentId || createId(element);\n    currentState.currentElementId = currentId;\n    const creator = element.tag(element.props);\n    if (\"update\" in creator && \"create\" in creator) {\n        const gameObject = creator.create(scene, element.props);\n        if (element.children) {\n            element.children.forEach((c, idx) => {\n                const newId = currentId + createId(element, idx);\n                currentState.currentElementId = newId;\n                const child = create(scene, c, helper);\n                helper.add(gameObject, child);\n            });\n        }\n        return gameObject;\n    }\n    return evaluateTag(scene, creator as Element<any>, helper);\n};\n\nexport const reconcile = <S, G extends object>(\n    scene: S,\n    old: Element<any> | undefined,\n    nu: Element<any>,\n    gameObject: G,\n    helper: ContainerHelper<G>,\n    currentId: string = \"\"\n) => {\n    const currentState = globalState.current;\n    if (!currentState) {\n        throw new Error(\"global state not set\");\n    }\n    currentId = currentId || createId(nu);\n    currentState.currentElementId = currentId;\n    const creator = nu.tag(nu.props);\n    if (\"update\" in creator && \"create\" in creator) {\n        creator.update(gameObject, nu.props);\n        if (nu.children) {\n            const oldChildren =\n                old?.children?.map((c, idx) => currentId + createId(c, idx)) ||\n                [];\n            const newChildren =\n                nu?.children?.map((c, idx) => currentId + createId(c, idx)) ||\n                [];\n            const toBeRemoved = oldChildren\n                .map((key, idx) => ({ key, idx }))\n                .filter((data) => newChildren.indexOf(data.key) < 0)\n                .map((data) => data.idx)\n                .sort()\n                .reverse();\n            toBeRemoved.forEach((idx) => {\n                helper.remove(gameObject, idx);\n                oldChildren.splice(idx, 1);\n            });\n            nu.children.forEach((c, idx) => {\n                const newId = currentId + createId(c, idx);\n                const oldIdx = oldChildren.indexOf(newId);\n                if (oldIdx < 0) {\n                    const newObject = create(scene, c, helper);\n                    helper.add(gameObject, newObject);\n                } else {\n                    if (oldIdx !== idx) {\n                        helper.move(gameObject, oldIdx, idx);\n                    }\n                    const childGo = helper.get(gameObject, oldIdx);\n                    currentState.currentElementId = newId;\n                    reconcile(scene, undefined, c, childGo, helper, newId);\n                }\n            });\n        }\n        return gameObject;\n    }\n    reconcile(scene, undefined, creator as Element<any>, gameObject, helper);\n};\n\nfunction createId(element: Element<any>, idx?: number): string {\n    if (typeof idx !== \"undefined\") {\n        return element.tag.name + (element.props.key || String(idx));\n    }\n    return element.tag.name;\n}\n\nexport const render = <S, G extends object>(\n    scene: S,\n    element: Element<any>,\n    helper: ContainerHelper<G>\n) => {\n    const globalState = new GlobalState();\n    const value = wrapInGlobalState(globalState, () =>\n        create(scene, element, helper)\n    );\n    globalState.onStateChange(() => {\n        wrapInGlobalState(globalState, () => {\n            reconcile(scene, element, element, value, helper);\n        });\n    });\n    return value;\n};\n\nexport const globalState: { current: GlobalState | undefined } = {\n    current: undefined,\n};\n\nconst wrapInGlobalState = <T>(g: GlobalState, cb: () => T): T => {\n    globalState.current = g;\n    const returnValue = cb();\n    globalState.current = undefined;\n    return returnValue;\n};\n\nexport interface ContainerHelper<G> {\n    remove(gameObject: G, idx: number): void;\n    move(gameObject: G, oldIdx: number, newIdx: number): void;\n    add(parent: G, child: G): void;\n    get(parent: G, idx: number): G;\n}\n"]}