{"version":3,"file":"utils.js","sourceRoot":"","sources":["../src/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import { isArrayLike } from \"mobx\";\nimport { Element } from \"./Element\";\nimport { GlobalState } from \"./GlobalState\";\n\nexport const create = <S, T>(\n    scene: S,\n    element: Element<any>,\n    helper: ContainerHelper<T>,\n    currentId: string = \"\"\n) => {\n    return evaluateTag(scene, element, helper, currentId);\n};\n\nconst evaluateTag = <S, P extends object, T>(\n    scene: S,\n    element: Element<any>,\n    helper: ContainerHelper<T>,\n    currentId: string = \"\"\n): T | undefined => {\n    if (!element) {\n        return undefined;\n    }\n    const currentState = globalState.current;\n    if (!currentState) {\n        throw new Error(\"global state not set\");\n    }\n    if (!currentId) {\n        currentId = createId(element);\n    }\n    currentState.currentElementId = currentId;\n    const creator = element.tag(element.props);\n    currentState.currentElementState?.onCreated();\n    if (\"update\" in creator && \"create\" in creator) {\n        const gameObject = creator.create(scene, element.props);\n        handleRef(element, gameObject);\n\n        if (element.children) {\n            let children = element.children;\n            if (!Array.isArray(element.children)) {\n                children = [element.children as unknown as Element<any>];\n            }\n            children.forEach((c, idx) => {\n                if (!c) {\n                    return;\n                }\n                const newId = currentId + createId(c, idx);\n                currentState.currentElementId = newId;\n                const child = create(scene, c, helper, newId);\n                if (child) {\n                    helper.add(gameObject, child);\n                }\n            });\n        }\n        return gameObject;\n    }\n    // TODO what about children here? And need to add new tag\n    if (Array.isArray(creator)) {\n        return creator.map((c) => {\n            return evaluateTag(\n                scene,\n                c as Element<any>,\n                helper,\n                currentId + createId(c)\n            );\n        }) as any;\n    }\n\n    return evaluateTag(\n        scene,\n        creator as Element<any>,\n        helper,\n        currentId + createId(creator)\n    );\n};\n\nexport const reconcile = <S, G extends object>(\n    scene: S,\n    old: Element<any> | undefined,\n    nu: Element<any>,\n    gameObject: G,\n    helper: ContainerHelper<G>,\n    currentId: string = \"\"\n) => {\n    const currentState = globalState.current;\n    if (!currentState) {\n        throw new Error(\"global state not set\");\n    }\n    if (!currentId) {\n        currentId = createId(nu);\n    }\n    currentState.currentElementId = currentId;\n    const creator = nu.tag(nu.props);\n    if (\"update\" in creator && \"create\" in creator) {\n        const rerender = creator.update(gameObject, nu.props);\n        if (rerender && globalState.current) {\n            globalState.current.rerender = true;\n        }\n        handleRef(nu, gameObject);\n\n        if (nu.children) {\n            let children = nu.children;\n            if (!Array.isArray(nu.children)) {\n                children = [nu.children as unknown as Element<any>];\n            }\n            let oldElementChildren = old?.children;\n            if (!Array.isArray(old?.children)) {\n                oldElementChildren = [old?.children as unknown as Element<any>];\n            }\n            const oldChildren =\n                oldElementChildren\n                    ?.filter((c) => !!c)\n                    .map((c, idx) => currentId + createId(c, idx)) || [];\n            const newChildren =\n                children\n                    .filter((c) => !!c)\n                    .map((c, idx) => currentId + createId(c, idx)) || [];\n            const toBeRemoved = oldChildren\n                .map((key, idx) => ({ key, idx }))\n                .filter((data) => newChildren.indexOf(data.key) < 0)\n                .map((data) => data.idx)\n                .sort()\n                .reverse();\n            toBeRemoved.forEach((idx) => {\n                helper.remove(gameObject, idx);\n\n                const removed = oldChildren.splice(idx, 1);\n                const elementState = globalState.current?.stateMap.get(\n                    removed[0]\n                );\n                elementState?.destroy();\n            });\n            children\n                .filter((c) => !!c)\n                .forEach((c, idx) => {\n                    const newId = currentId + createId(c, idx);\n                    const oldIdx = oldChildren.indexOf(newId);\n                    if (oldIdx < 0) {\n                        const newObject = create(scene, c, helper, newId);\n                        if (newObject) {\n                            helper.add(gameObject, newObject);\n                        }\n                    } else {\n                        if (oldIdx !== idx) {\n                            helper.move(gameObject, oldIdx, idx);\n                        }\n                        const childGo = helper.get(gameObject, oldIdx);\n                        currentState.currentElementId = newId;\n                        reconcile(scene, c, c, childGo, helper, newId);\n                    }\n                });\n        }\n        return gameObject;\n    }\n    if (Array.isArray(creator)) {\n        creator.forEach((c) => {\n            reconcile(\n                scene,\n                c,\n                c as Element<any>,\n                gameObject,\n                helper,\n                currentId + createId(c)\n            );\n        });\n    } else {\n        reconcile(\n            scene,\n            creator,\n            creator as Element<any>,\n            gameObject,\n            helper,\n            currentId + createId(creator)\n        );\n    }\n};\n\nfunction createId(element: Element<any>, idx?: number): string {\n    if (typeof idx !== \"undefined\") {\n        return element.tag.name + (element.props.key || String(idx));\n    }\n    return element.tag.name;\n}\n\nexport const render = <S, G extends object>(\n    scene: S,\n    element: Element<any>,\n    helper: ContainerHelper<G>\n) => {\n    const globalState = new GlobalState();\n\n    const value = wrapInGlobalState(globalState, () =>\n        create(scene, element, helper)\n    );\n\n    function renderInternally() {\n        while (!!value && globalState.rerender) {\n            globalState.rerender = false;\n\n            wrapInGlobalState(globalState, () => {\n                reconcile(scene, element, element, value, helper);\n            });\n        }\n    }\n\n    renderInternally();\n\n    globalState.onStateChange(() => {\n        renderInternally();\n    });\n\n    return value;\n};\n\nexport const globalState: { current: GlobalState | undefined } = {\n    current: undefined,\n};\n\nexport const wrapInGlobalState = <T>(g: GlobalState, cb: () => T): T => {\n    globalState.current = g;\n    const returnValue = cb();\n    globalState.current = undefined;\n    return returnValue;\n};\n\nexport interface ContainerHelper<G> {\n    remove(gameObject: G, idx: number): void;\n    move(gameObject: G, oldIdx: number, newIdx: number): void;\n    add(parent: G, child: G): void;\n    get(parent: G, idx: number): G;\n}\nconst handleRef = <T>(el: Element<any>, gameObject: T) => {\n    if (el.props.ref) {\n        if (typeof el.props.ref === \"function\") {\n            el.props.ref(gameObject);\n        } else {\n            el.props.ref.current = gameObject;\n        }\n    }\n};\n"]}